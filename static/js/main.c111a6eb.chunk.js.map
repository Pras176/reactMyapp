{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","style","height","width","cursor","htmlFor","TextForm","useState","text","setText","color","heading","value","onChange","ev","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","message","setTimeout","cls","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c111a6eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n        </li> */}\n      </ul>\n      <div className=\"d-flex\">\n        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.togglemode('primary')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\n        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.togglemode('danger')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\n        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.togglemode('success')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.togglemode('warning')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\n      </div>\n      \n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" onClick={()=>{props.togglemode(null)}} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle mode</label>\n</div>\n    </div>\n  </div>\n</nav>\n        </div>\n    )\n}\nNavbar.propTypes={title:PropTypes.string.isRequired,\n                   aboutText:PropTypes.string.isRequired}\n\nNavbar.defaultProps={title:'Enter Title here',\n                    aboutText:'Enter About Us'};\n                    ","import React,{useState} from 'react'\n\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick=()=>{\n        console.log(\"upperCase was clicked\");\n        let newText=text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to uppercase\",\"success\");\n    }\n    const handleLoClick=()=>{\n        console.log(\"LowerCase was clicked\");\n        let newText=text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to lowercase\",\"success\");\n    }\n    const handleClearClick=()=>{\n        console.log(\"Clear text\");\n        let newText=\"\";\n        setText(newText);\n        props.showAlert(\"Clear Box\",\"success\");\n    }\n    const handleCopy=()=>{\n        console.log(\"Copy text\");\n        var text=document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Text Copied\",\"success\");\n    }\n    const handleRemoveSpace=()=>{\n        console.log(\"Extra spaces remove\");\n        let newText=text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra Spaces Removed\",\"success\");\n    }\n    const handleOnChange=(ev)=>{\n     console.log(\"on change\");\n     setText(ev.target.value);\n    }\n    const[text,setText]=useState('');\n    //setText(\"new text\"); correct way to change the text;\n\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            \n<div className=\"mb-3\">\n    <h1 className=\"mb-4\">{props.heading}</h1>\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey',color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n</div>\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Lowerercase</button>\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear box</button>\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleRemoveSpace}>Remove Extra Space</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} Words {text.length} Characters</p>\n            <p>{0.08*text.split(\" \").length} Minutes read</p>\n            <h2 className=\"my-3\">Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n  const capitalize=(word)=>{\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  }\n    return (\n      <div style={{height:'50px'}}>\n      {props.alert &&  <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n</div>}\n</div>\n    )\n}\n\nexport default Alert\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nlet name=\"Prashant\";\nfunction App() {\n  const [mode, setmode] = useState('light');\nconst [alert, setAlert] = useState(null);\nconst showAlert=(message,type)=>{\nsetAlert({\n  msg:message,\n  type:type\n})\nsetTimeout(()=>{\nsetAlert(null);\n},1500);\n}\n\nconst removeBodyClasses=()=>{\n  document.body.classList.remove('bg-light');\n  document.body.classList.remove('bg-dark');\n  document.body.classList.remove('bg-primary');\n  document.body.classList.remove('bg-success');\n  document.body.classList.remove('bg-warning');\n  document.body.classList.remove('bg-danger');\n}\n\n  const togglemode=(cls)=>{\n    removeBodyClasses();\n    document.body.classList.add('bg-'+cls);\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='Myapp-Dark Mode';\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='Myapp-Light Mode';\n    }\n  }\n  return (\n    <>\n{/* <Router>    */}\n<Navbar title=\"myapp\" aboutText=\"About us\" mode={mode} togglemode={togglemode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm mode={mode} heading=\"Try Myapp-Word counter,Character Counter,Remove Extra Space\" showAlert={showAlert}/> \n          {/* </Route>\n  </Switch> */}\n\n\n</div>\n{/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}